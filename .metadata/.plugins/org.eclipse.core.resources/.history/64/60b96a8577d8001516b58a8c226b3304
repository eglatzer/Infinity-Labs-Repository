package com.ilad.manipulatetree;

import java.util.ArrayList;

public class TreeNode {
	public int data;
	public TreeNode left;
	public TreeNode right;
	
	// Constructor
	public TreeNode(int data_) {
		data = data_;
	}
	
	public int findNumOfNonLeafNodes() {
		ArrayList<TreeNode> array = new ArrayList<>();
		int sum = 0;
		
		array.add(this);
		
		while(!array.isEmpty()) {
			if(null != array.get(0) &&
					(null != array.get(0).left || null != array.get(0).right)) {
				++sum;
				array.add(node.left);
				array.add(node.right);
				array.remove(0);
			}
		}
		
		return sum;
	}
	
	public void findSum(int sum) {
		
	}
	
	public static void main(String[] args) {
		TreeNode root = new TreeNode(5);
		root.left = new TreeNode(4);
		root.right = new TreeNode(8);
		root.left.left = new TreeNode(11);
		root.right.left = new TreeNode(13);
		root.right.right = new TreeNode(4);
		root.left.left.left = new TreeNode(7);
		root.left.left.right = new TreeNode(2);
		root.right.right.left = new TreeNode(5);
		root.right.right.right = new TreeNode(1);
		
		System.out.println
			("Number of Non Leaf Nodes in root: " + root.findNumOfNonLeafNodes());
	}
}
